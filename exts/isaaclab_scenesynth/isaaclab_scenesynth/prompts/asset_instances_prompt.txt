You are generating a list of 3D scene objects based on the following requirements.

Object types:
{asset_types}

Required parameters:
{type_descriptions}

Please return a JSON list. Each element should be a dictionary with:
- id: unique string ID
- type: one of the asset types
- transform: 4x4 matrix (identity is fine if unknown)
- the required parameters for the specified type

Please follow these rules for compartments:
- `compartment_mask` must be a 2D list (e.g., [[0, 1], [2, 3]]).
  - Each value in this mask is an integer index into `compartment_types`.
- `compartment_types` must be a flat list. The length must be at least `max(compartment_mask) + 1`.
  - You can use: ['none', 'drawer', 'door_left', 'door_right', 'door_top', 'door_bottom', 'closed', 'open']
- `compartment_interior_masks` must be a none.
- `compartment_widths` must match the number of columns in `compartment_mask`.
- `compartment_heights` must match the number of rows in `compartment_mask`.

Additional constraints:
- `handle_offset` must be a flat list of three float values (e.g., [0.1, 0.4, 0.0])
- Only include the following valid fields for `handle_shape_args`:
  - straight_ratio, curvature_ratio, num_segments_curvature, num_segments_cross_section, aspect_ratio_cross_section, tmp_mesh_dir
- Do not include any `"shape"` or `"radius"` fields in `handle_shape_args` or `door_shape_args`
- If `"use_primitives"` is true for a bin, do not include the `"angle"` field.

Return only valid JSON.
